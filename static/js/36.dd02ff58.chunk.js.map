{"version":3,"file":"static/js/36.dd02ff58.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/MovieList/MovieList.styled.js","components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","page/Movies/Movies.jsx","services/MoviApi.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  color: #a4161a;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Text } from './Error.styled';\n\nexport default function ErrorMessage({ message }) {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin: 20px auto;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h2`\n  padding: 5px 10px;\n  font-size: 21px;\n  color: #42362b;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Image, Title } from './MovieListItem.styled';\n\nexport default function MovieListItem({ id, title, poster }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Image\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt=\"{title}\"\n          />\n        </div>\n        <Title>{title ? title : 'No tittle'}</Title>\n      </Link>\n    </Item>\n  );\n}\n\nMovieListItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n  poster: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nimport { List } from './MovieList.styled';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\n\nexport default function MovieList({ movies }) {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <MovieListItem\n            key={id}\n            id={id}\n            title={original_title}\n            poster={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  width: 320px;\n  margin: 30px auto;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 4px 2px;\n  border: 0;\n  border-bottom: 1px solid #5db09d;\n  background-color: transparent;\n  color: #42362b;\n  font-size: 14px;\n\n  transition: border 250ms linear;\n\n  &:focus {\n    outline: none;\n    border-color: #42362b;\n  }\n\n  &::placeholder {\n    font-size: 15px;\n    font-weight: 400;\n    line-height: 1.17;\n    color: #42362b;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  right: -2px;\n  bottom: 4px;\n  padding: 2px;\n  width: 16px;\n  height: 16px;\n  border: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  background-image: url(https://cdn-icons-png.flaticon.com/512/151/151773.png);\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormContainer, Form, Input, Button } from './SearchForm.styled';\n\nexport default function SearchForm({ formSubmit, errorMessage }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      errorMessage();\n      return;\n    }\n    formSubmit(query);\n    setQuery('');\n  };\n\n  const getQuery = e => {\n    setQuery(e.target.value.toLowerCase().trim());\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={getQuery}\n          autoComplete=\"off\"\n          placeholder=\"find a movie\"\n        />\n        <Button type=\"submit\"></Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nSearchForm.propTypes = {\n  formSubmit: PropTypes.func.isRequired,\n  errorMessage: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport ErrorMessage from 'components/Error/Error';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\nimport { searchByMovies } from '..//../services/MoviApi';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    const searchMovieId = async () => {\n      if (!currentQuery) return;\n      setStatus(STATUS.PENDING);\n      try {\n        const data = await searchByMovies(currentQuery);\n\n        if (data.length === 0) {\n          setMovies([]);\n          setError('No content, please try another query.');\n          return;\n        }\n        setMovies(data);\n        setStatus(STATUS.RESOLVED);\n        setError('');\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        setError(error.message);\n      }\n    };\n    searchMovieId();\n  }, [searchParams]);\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  }\n\n  const formSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  const formErrorMessage = () => {\n    setMovies([]);\n    setError('You entered an empty row!');\n  };\n\n  return (\n    <div>\n      <SearchForm formSubmit={formSubmit} errorMessage={formErrorMessage} />\n      {STATUS.REJECTED && <ErrorMessage message={error} />}\n      {STATUS.RESOLVED && <MovieList movies={movies} />}\n    </div>\n  );\n}\n","// https://api.themoviedb.org/3/movie/550?api_key=cca79e12b25cdd9f67fc795a1689f5d9\nimport axios from 'axios';\n\nconst API_KEY = 'cca79e12b25cdd9f67fc795a1689f5d9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список популярних фільмів на головній сторінці\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n// пошук фільму по ключовому слову\nexport const searchByMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму\nexport const searchGeneralInfo = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const dataMovies = {\n    originalTitle: data.original_title,\n    title: data.title,\n    genres: data.genres,\n    overview: data.overview,\n    poster: data.poster_path,\n    releaseDate: data.release_date.slice(0, 4),\n    voteAverage: data.vote_average,\n  };\n  return dataMovies;\n};\n\n// запит інформації про акторів\nexport const fetchMovieCasts = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const castInfo = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profilePath: profile_path,\n  }));\n  return castInfo;\n};\n\n// запит обзорів для сторінки кінофільмів\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviewsInfo = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n\n  return reviewsInfo;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Container","styled","Text","ErrorMessage","message","Error","propTypes","PropTypes","List","Item","Image","Title","MovieListItem","id","title","poster","location","useLocation","to","state","from","src","alt","MovieList","movies","map","original_title","poster_path","FormContainer","Form","Input","Button","SearchForm","formSubmit","errorMessage","useState","query","setQuery","onSubmit","e","preventDefault","type","name","value","onChange","target","toLowerCase","trim","autoComplete","placeholder","STATUS","Movies","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","status","setStatus","useEffect","currentQuery","get","searchMovieId","searchByMovies","data","length","Loader","API_KEY","axios","fetchTrendingMovies","response","results","keyword","searchGeneralInfo","movieId","dataMovies","originalTitle","genres","overview","releaseDate","release_date","slice","voteAverage","vote_average","fetchMovieCasts","castInfo","cast","profilePath","profile_path","fetchMovieReviews","reviewsInfo","author","content","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}